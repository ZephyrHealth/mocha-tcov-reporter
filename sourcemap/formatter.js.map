{"version":3,"sources":["formatter.coffee"],"names":[],"mappings":"AAAA,IAAA,qEAAA;EAAA,kBAAA;;AAAA,KAAA,GAAQ,OAAA,CAAQ,OAAR,CAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,KAAxC,CAAA;;AAAA,MACA,GAAS,OAAA,CAAQ,YAAR,CAAqB,CAAC,QAD/B,CAAA;;AAAA,MAEA,GAAS,OAAA,CAAQ,iBAAR,CAFT,CAAA;;AAAA,MAIM,CAAC,OAAO,CAAC,MAAf,GAAwB,SAAC,MAAD,GAAA;AACtB,MAAA,QAAA;AAAA,EAAA,MAAM,CAAC,OAAP,CAAe,4BAAf,CAAA,CAAA;AAAA,EACA,MAAM,CAAC,KAAK,CAAC,OAAb,CAAqB,mBAArB,CADA,CAAA;AAAA,EAGA,QAAA,GAAW,QAAA,CAAS,MAAM,CAAC,QAAhB,CAHX,CAAA;AAAA,EAKA,MAAM,CAAC,QAAP,CAAA,CALA,CAAA;AAAA,EAMA,MAAM,CAAC,OAAP,CAAe,kBAAA,GAAqB,QAApC,CANA,CAAA;SAOA,MAAM,CAAC,QAAP,CAAA,EARsB;AAAA,CAJxB,CAAA;;AAAA,mBAcA,GAAsB,SAAC,IAAD,GAAA;AACpB,MAAA,QAAA;AAAA,EAAA,QAAA,GAAW,QAAA,CAAS,IAAI,CAAC,QAAd,CAAX,CAAA;SACA,eAAA,CAAgB,QAAhB,EAA0B,IAAI,CAAC,QAA/B,EAAyC,IAAI,CAAC,KAA9C,EAAqD,IAAI,CAAC,QAA1D,EAFoB;AAAA,CAdtB,CAAA;;AAAA,QAkBA,GAAW,SAAC,QAAD,GAAA;AACT,MAAA,OAAA;AAAA,EAAA,OAAA,GAAU,MAAA,CAAO,SAAP,EAAkB,CAAC,QAAD,CAAlB,CAAV,CAAA;AAEA,EAAA,IAAG,QAAA,IAAY,EAAf;WACE,KAAA,CAAM,OAAN,EAAe,OAAf,EADF;GAAA,MAEK,IAAG,QAAA,GAAW,EAAd;WACH,KAAA,CAAM,MAAN,EAAc,OAAd,EADG;GAAA,MAAA;WAGH,KAAA,CAAM,eAAN,EAAuB,OAAvB,EAHG;GALI;AAAA,CAlBX,CAAA;;AAAA,eA4BA,GAAkB,SAAA,GAAA;AAChB,MAAA,cAAA;AAAA,EADiB,gEACjB,CAAA;AAAA,EAAA,MAAA,GAAS,MAAA,CAAO,iBAAP,EAA0B,MAA1B,CAAT,CAAA;SACA,MAAM,CAAC,OAAP,CAAe,MAAf,EAFgB;AAAA,CA5BlB,CAAA","file":"formatter.js","sourceRoot":"/source/","sourcesContent":["color = require('mocha').reporters.Base.color\nformat = require('sprintf-js').vsprintf\nwriter = require('./report-writer')\n\nmodule.exports.format = (result) ->\n  writer.writeln \"\\nCode Coverage Results:\\n\"\n  result.files.forEach fileResultFormatter\n\n  coverage = colorize(result.coverage)\n\n  writer.writeEOL()\n  writer.writeln \"Total Coverage: \" + coverage\n  writer.writeEOL()\n\nfileResultFormatter = (file) ->\n  coverage = colorize(file.coverage)\n  writeFileResult coverage, file.executed, file.total, file.fileName\n\ncolorize = (coverage) ->\n  percent = format '%6.2f%%', [coverage]\n\n  if coverage >= 75\n    color('green', percent)\n  else if coverage < 30\n    color('fail', percent)\n  else\n    color('bright yellow', percent)\n\nwriteFileResult = (values...) ->\n  output = format '%s (%2d/%2d) %s', values\n  writer.writeln output\n"]}