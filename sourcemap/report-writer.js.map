{"version":3,"sources":["report-writer.coffee"],"names":[],"mappings":"AAAA,IAAA,sCAAA;EAAA,gBAAA;;AAAA,KAAA,GAAQ,OAAA,CAAQ,OAAR,CAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,KAAxC,CAAA;;AAAA,MACA,GAAS,OAAA,CAAQ,YAAR,CAAqB,CAAC,QAD/B,CAAA;;AAAA,MAEA,GAAS,OAAA,CAAQ,kBAAR,CAFT,CAAA;;AAAA,CAGA,GAAI,OAAA,CAAQ,eAAR,CAHJ,CAAA;;AAAA;AAOE,yBAAA,cAAA,GAAgB;AAAA,IACd,QAAA,EAAU,IADI;AAAA,IAEd,YAAA,EAAc,IAFA;GAAhB,CAAA;;AAKa,EAAA,sBAAC,OAAD,GAAA;AACX,IAAA,IAAC,CAAA,YAAD,CAAc,OAAd,CAAA,CADW;EAAA,CALb;;AAAA,yBAQA,YAAA,GAAc,SAAC,OAAD,GAAA;AACZ,IAAA,IAAC,CAAA,OAAD,GAAW,CAAC,CAAC,KAAF,CAAQ,EAAR,EAAY,IAAC,CAAA,cAAb,EAA6B,OAA7B,CAAX,CAAA;AAAA,IACA,IAAC,CAAA,OAAO,CAAC,QAAT,GAAoB,UAAA,CAAW,IAAC,CAAA,OAAO,CAAC,QAApB,CADpB,CAAA;WAEA,IAAC,CAAA,OAAO,CAAC,YAAT,GAAwB,UAAA,CAAW,IAAC,CAAA,OAAO,CAAC,YAApB,EAHZ;EAAA,CARd,CAAA;;AAAA,yBAaA,WAAA,GAAa,SAAC,MAAD,GAAA;AACX,QAAA,QAAA;AAAA,IAAA,MAAM,CAAC,OAAP,CAAe,4BAAf,CAAA,CAAA;AAAA,IACA,MAAM,CAAC,KAAK,CAAC,OAAb,CAAqB,IAAC,CAAA,gBAAtB,EAAwC,IAAxC,CADA,CAAA;AAAA,IAGA,QAAA,GAAW,IAAC,CAAA,QAAD,CAAU,MAAM,CAAC,QAAjB,CAHX,CAAA;AAAA,IAKA,MAAM,CAAC,QAAP,CAAA,CALA,CAAA;AAAA,IAMA,MAAM,CAAC,OAAP,CAAe,kBAAA,GAAqB,QAApC,CANA,CAAA;WAOA,MAAM,CAAC,QAAP,CAAA,EARW;EAAA,CAbb,CAAA;;AAAA,yBAuBA,gBAAA,GAAkB,SAAC,IAAD,GAAA;AAChB,QAAA,QAAA;AAAA,IAAA,QAAA,GAAW,IAAC,CAAA,QAAD,CAAU,IAAI,CAAC,QAAf,CAAX,CAAA;WACA,IAAC,CAAA,eAAD,CAAiB,QAAjB,EAA2B,IAAI,CAAC,QAAhC,EAA0C,IAAI,CAAC,KAA/C,EAAsD,IAAI,CAAC,QAA3D,EAFgB;EAAA,CAvBlB,CAAA;;AAAA,yBA2BA,QAAA,GAAU,SAAC,QAAD,GAAA;AACR,QAAA,OAAA;AAAA,IAAA,OAAA,GAAU,MAAA,CAAO,SAAP,EAAkB,CAAC,QAAD,CAAlB,CAAV,CAAA;AAEA,IAAA,IAAG,QAAA,IAAY,IAAC,CAAA,OAAO,CAAC,YAAxB;aACE,KAAA,CAAM,OAAN,EAAe,OAAf,EADF;KAAA,MAEK,IAAG,QAAA,GAAW,IAAC,CAAA,OAAO,CAAC,QAAvB;aACH,KAAA,CAAM,MAAN,EAAc,OAAd,EADG;KAAA,MAAA;aAGH,KAAA,CAAM,eAAN,EAAuB,OAAvB,EAHG;KALG;EAAA,CA3BV,CAAA;;AAAA,yBAqCA,eAAA,GAAiB,SAAA,GAAA;AACf,QAAA,cAAA;AAAA,IADgB,8DAChB,CAAA;AAAA,IAAA,MAAA,GAAS,MAAA,CAAO,iBAAP,EAA0B,MAA1B,CAAT,CAAA;WACA,MAAM,CAAC,OAAP,CAAe,MAAf,EAFe;EAAA,CArCjB,CAAA;;sBAAA;;IAPF,CAAA;;AAAA,MAgDM,CAAC,OAAP,GAAiB,YAhDjB,CAAA","file":"report-writer.js","sourceRoot":"/source/","sourcesContent":["color = require('mocha').reporters.Base.color\nformat = require('sprintf-js').vsprintf\nwriter = require('./console-writer')\n_ = require('lodash/object')\n\nclass ReportWriter\n\n  defaultOptions: {\n    critical: 30.0,\n    satisfactory: 70.0\n  }\n\n  constructor: (options) ->\n    @mergeOptions(options)\n\n  mergeOptions: (options) ->\n    @options = _.merge({}, @defaultOptions, options)\n    @options.critical = parseFloat(@options.critical)\n    @options.satisfactory = parseFloat(@options.satisfactory)\n\n  writeReport: (result) ->\n    writer.writeln \"\\nCode Coverage Results:\\n\"\n    result.files.forEach @formatFileResult, @\n\n    coverage = @colorize(result.coverage)\n\n    writer.writeEOL()\n    writer.writeln \"Total Coverage: \" + coverage\n    writer.writeEOL()\n\n  formatFileResult: (file) ->\n    coverage = @colorize(file.coverage)\n    @writeFileResult coverage, file.executed, file.total, file.fileName\n\n  colorize: (coverage) ->\n    percent = format '%6.2f%%', [coverage]\n\n    if coverage >= @options.satisfactory\n      color('green', percent)\n    else if coverage < @options.critical\n      color('fail', percent)\n    else\n      color('bright yellow', percent)\n\n  writeFileResult: (values...) ->\n    output = format '%s (%2d/%2d) %s', values\n    writer.writeln output\n\nmodule.exports = ReportWriter\n"]}